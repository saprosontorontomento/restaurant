{"version":3,"sources":["components/menu-list-item/index.js","components/menu-list-item/menu-list-item.js","components/resto-service-context/index.js","components/resto-service-context/resto-service-context.js","components/hoc/index.js","components/hoc/with-resto-service.js","components/menu-list/menu-list.js","actions/index.js","components/menu-list/index.js","components/pages/main-page.js","components/cart-table/index.js","components/cart-table/cart-table.js","components/pages/cart-page.js","components/app-header/shopping-cart-solid.svg","components/app-header/index.js","components/app-header/app-header.js","components/app/food-bg.jpg","components/app/index.js","components/app/app.js","components/error/index.js","components/error/error.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/index.js","store.js","index.js","services/resto-service.js"],"names":["MenuListItem","menuItem","title","price","url","category","className","src","alt","RestoServiceContext","React","createContext","WithRestoService","Wrapped","props","Consumer","RestoService","MenuList","this","getMenuItems","then","res","menuLoaded","menuItems","map","id","Component","mapDispatchToProps","newMenu","type","payload","connect","state","menu","MainPage","CartTable","CartPage","AppHeader","total","to","cartIcon","App","style","background","Background","path","component","exact","Error","ErrorBoundry","error","setState","children","initialState","reducer","action","store","createStore","restoService","a","fetch","response","ok","json","result","ReactDOM","render","Provider","value","document","getElementById"],"mappings":"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","file":"static/js/main.6975b9fe.chunk.js","sourcesContent":["import MenuListItem from './menu-list-item';\nexport default MenuListItem;","import React from 'react';\nimport './menu-list-item.scss';\n\nconst MenuListItem = ({menuItem}) => {\n    const {title, price, url, category} = menuItem;\n    return (\n            <li className=\"menu__item\">\n                <div className=\"menu__title\">{title}</div>\n                <img className=\"menu__img\" src={url} alt={title}></img>\n                <div className=\"menu__category\">Category: <span>{category}</span></div>\n                <div className=\"menu__price\">Price: <span>{price}$</span></div>\n                <button className=\"menu__btn\">Add to cart</button>\n            </li>\n    )\n}\n\nexport default MenuListItem;","import RestoServiceContext from './resto-service-context';\n\nexport default RestoServiceContext;","import React from 'react';\r\n\r\nconst RestoServiceContext = React.createContext();\r\n\r\nexport default RestoServiceContext;","import WithRestoService from './with-resto-service';\n\nexport default WithRestoService;","import React from 'react';\nimport RestoServiceContext from '../resto-service-context';\n// сервис принимает какой-то другой компонент\nconst WithRestoService = () => (Wrapped) => { // обозвали Wrapped\n    return (props) => { // в него передаются пропсы\n        return ( // рендерим такую структуру, где прячем consumer\n            <RestoServiceContext.Consumer>\n                {\n                    (RestoService) => {\n                        return <Wrapped {...props} RestoService={RestoService} />\n                    }\n                }\n            </RestoServiceContext.Consumer>\n        )\n    }\n};\n\nexport default WithRestoService;","import React, {Component} from 'react';\nimport MenuListItem from '../menu-list-item';\nimport { connect } from 'react-redux'; // связываем menuList с redux\nimport WithRestoService from '../hoc'; // записываем данные из компонента в наш state\nimport {menuLoaded} from '../../actions';\n\nimport './menu-list.scss';\n\nclass MenuList extends Component {\n\n    componentDidMount() {\n        const {RestoService} = this.props;\n        RestoService.getMenuItems()\n            .then(res => this.props.menuLoaded(res));\n    }\n\n    render() {\n        const {menuItems} = this.props;\n\n        return (\n            <ul className=\"menu__list\">\n                {\n                    menuItems.map(menuItem => {\n                        return <MenuListItem key={menuItem.id} menuItem={menuItem} />\n                    })\n                }\n            </ul>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return { // получили данные из state\n        menuItems: state.menu\n    }\n}\n\nconst mapDispatchToProps = {\n    menuLoaded\n};\n\n\nexport default WithRestoService()(connect(mapStateToProps,mapDispatchToProps)(MenuList));","const menuLoaded = (newMenu) => {\r\n    return {\r\n        type: 'MENU_LOADED',\r\n        payload: newMenu\r\n    };\r\n};\r\n\r\nexport {\r\n    menuLoaded\r\n};","import MenuList from './menu-list';\nexport default MenuList;","import React from 'react';\nimport MenuList from '../menu-list';\n\nconst MainPage = () => {\n    return (\n        <MenuList/>\n    )\n}\n\nexport default MainPage;\n","import CartTable from './cart-table';\n\nexport default CartTable;","import React from 'react';\nimport './cart-table.scss';\n\nconst CartTable = () => {\n    return (\n        <>\n            <div className=\"cart__title\">Ваш заказ:</div>\n            <div className=\"cart__list\">\n                <div className=\"cart__item\">\n                    <img src=\"https://static.1000.menu/img/content/21458/-salat-cezar-s-kr-salat-cezar-s-krevetkami-s-maionezom_1501173720_1_max.jpg\" className=\"cart__item-img\" alt=\"Cesar salad\"></img>\n                    <div className=\"cart__item-title\">Cesar salad</div>\n                    <div className=\"cart__item-price\">12$</div>\n                    <div className=\"cart__close\">&times;</div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default CartTable;","import React from 'react';\nimport CartTable from '../cart-table';\n\nconst CartPage = () => {\n    return (\n        <div className=\"cart\"> \n            <CartTable/>\n        </div>\n    )\n}\n\nexport default CartPage;","export default __webpack_public_path__ + \"static/media/shopping-cart-solid.f0d47d21.svg\";","import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport cartIcon from './shopping-cart-solid.svg';\nimport './app-header.scss';\nimport { Link } from 'react-router-dom';\n\nconst AppHeader = ({total}) => {\n    return (\n        <header className=\"header\">\n            <Link to ={'/'} className = \"header__link\">Menu</Link>\n            <Link to = \"/cart\" className = \"header__link\">\n                <img className=\"header__cart\" src={cartIcon} alt=\"cart\"></img>\n                Total: {total} $\n            </Link>\n        </header>\n    )\n};\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/food-bg.fd26761e.jpg\";","import App from './app';\n\nexport default App;","import React from 'react';\nimport {MainPage, CartPage} from '../pages';\nimport AppHeader from '../app-header';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Background from './food-bg.jpg';\n\nconst App = () => {\n\n    return (\n    <div style={{background: `url(${Background}) center center/cover no-repeat`}} className=\"app\">\n        <AppHeader total={50}/>\n        <Switch>\n            <Route \n                path='/' \n                component={MainPage}\n                exact/>\n            <Route \n                path='/cart'  \n                component={CartPage}/>\n        </Switch>\n    </div>\n    )\n}\n\nexport default App;","import Error from './error';\n\nexport default Error;","import React from 'react';\n\nconst Error = () => {\n    return <div className=\"error\">Error</div>\n}\n\nexport default Error;","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport Error from '../error';\n\nexport default class ErrorBoundry extends Component {\n\n    state = {\n        error: false,\n    }\n\n    componentDidCatch() {\n        this.setState({error: true});\n    }\n\n    render() {\n        if (this.state.error) {\n            return <Error/>\n        }\n\n        return this.props.children; // отрендерим всё что будет внутри компонента errBoundry\n    }\n}","const initialState = {\r\n    menu: [\r\n        \r\n    ]\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'MENU_LOADED':\r\n            return {\r\n                menu: action.payload\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from \"redux\";\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ErrorBoundry from './components/error-boundry';\nimport RestoService from './services/resto-service';\nimport RestoServiceContext from './components/resto-service-context';\nimport store from './store';\n\nimport './index.scss';\n\nconst restoService = new RestoService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <RestoServiceContext.Provider value={restoService}>\n                <Router>\n                    <App/>\n                </Router>\n            </RestoServiceContext.Provider>\n        </ErrorBoundry>\n    </Provider>\n    , document.getElementById('root'));\n\n","export default class RestoService {\r\n    url = 'http://localhost:3000/menu';\r\n\r\n    getMenuItems = async () => {\r\n        const response = await fetch(this.url);\r\n        if (!response.ok) {\r\n            throw new Error('Server Error');\r\n        }\r\n        const result = await response.json();\r\n        return result;\r\n    }\r\n}"],"sourceRoot":""}